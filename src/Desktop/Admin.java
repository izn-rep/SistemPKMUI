/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Admin.java
 *
 * Created on May 10, 2013, 10:33:30 PM
 */
package Desktop;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

/**
 *
 * @author Izani Note-PC1
 */
public class Admin extends javax.swing.JFrame {

    /** Creates new form Admin */
    public Admin() {
        initComponents();
        setTitle("Administrator Panel PKM-UI");
        bukapasien();
        bukakunjungan();
        bukaperiksa();
        bukaobat();
        reset();
        resetobat();
    }
    
    public void bukaobat(){
        DefaultTableModel MapTableObat = new DefaultTableModel();
        MapTableObat.addColumn("ID");
        MapTableObat.addColumn("Nama Obat");
        MapTableObat.addColumn("Satuan");
        MapTableObat.addColumn("Stock");
        
        try {
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            String bukadata = "select * from db_obat";
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(bukadata);
            while (rs.next()){
                MapTableObat.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
            table_obat.setModel(MapTableObat);
        } catch (Exception e) {
            
        }
    }
    
    public void bukapasien(){
        DefaultTableModel MapTablePasien = new DefaultTableModel();
        MapTablePasien.addColumn("Kode");
        MapTablePasien.addColumn("Nama");
        MapTablePasien.addColumn("Identitas");  
        MapTablePasien.addColumn("Tanggal Lahir");  
        MapTablePasien.addColumn("Fakultas");
        
        try {
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            String bukadata = "select * from pasien";
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(bukadata);
            while (rs.next()){
                MapTablePasien.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(4), rs.getString(5), rs.getString(6)});
            }
            table_pasien.setModel(MapTablePasien);
        } catch (Exception e) {
            
        }
    }
    
    public void bukakunjungan(){
        DefaultTableModel MapTableKunjungan = new DefaultTableModel();
        MapTableKunjungan.addColumn("Kode");
        MapTableKunjungan.addColumn("Tanggal");
        MapTableKunjungan.addColumn("Petugas");
        
        try {
            String query = "select * from kunjungan ";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(query);
            while (rs.next()) {
                MapTableKunjungan.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3)});
                
            }
            table_kunjungan.setModel(MapTableKunjungan);
        } catch (Exception e) {
            
        }
    }
    
    public void bukaperiksa(){
        DefaultTableModel MapTablePeriksa = new DefaultTableModel();
        MapTablePeriksa.addColumn("Kode");
        MapTablePeriksa.addColumn("Resep");
        MapTablePeriksa.addColumn("Diagnosa");
        MapTablePeriksa.addColumn("Pemeriksa");
        
        try {
            String query = "select * from periksa ";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(query);
            while (rs.next()) {
                MapTablePeriksa.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5)});
                
            }
            table_periksa.setModel(MapTablePeriksa);
        } catch (Exception e) {
            
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_pasien = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        combo_pasien = new javax.swing.JComboBox();
        txt_kode_pasien = new javax.swing.JTextField();
        cari_pasien = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_kunjungan = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        combo_kunjungan = new javax.swing.JComboBox();
        btn_cari_kunjungan = new javax.swing.JButton();
        txt_kode_kunjungan = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_periksa = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        btn_cari_periksa = new javax.swing.JButton();
        combo_periksa = new javax.swing.JComboBox();
        txt_kode_periksa = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        rb_laki = new javax.swing.JRadioButton();
        combo_fakultas = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        rb_perempuan = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txt_telepon = new javax.swing.JTextField();
        txt_kode = new javax.swing.JTextField();
        txt_nama = new javax.swing.JTextField();
        txt_nim = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txta_alamat = new javax.swing.JTextArea();
        btn_cari = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        btn_keluar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btn_laporan = new javax.swing.JButton();
        date_tanggal = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_obat = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt_idobat = new javax.swing.JTextField();
        txt_namaobat = new javax.swing.JTextField();
        txt_satuanobat = new javax.swing.JTextField();
        txt_stockobat = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Admin Page"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Personal"));

        table_pasien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Nama", "Identitas", "Tanggal Lahir", "Fakultas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_pasien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_pasienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_pasien);

        jLabel11.setText("Cari berdasarkan :");

        combo_pasien.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kode Pasien", "Nama", "Identitas", "Tanggal Lahir", "Fakultas" }));

        cari_pasien.setText("Cari");
        cari_pasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_pasienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_kode_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cari_pasien)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(combo_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_kode_pasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cari_pasien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Kunjungan"));

        table_kunjungan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Tanggal", "Petugas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_kunjungan);

        jLabel9.setText("Cari berdasarkan :");

        combo_kunjungan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kode Pasien", "Tanggal Kunjungan", "Petugas" }));

        btn_cari_kunjungan.setText("Cari");
        btn_cari_kunjungan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cari_kunjunganActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_kunjungan, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_kode_kunjungan, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cari_kunjungan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(combo_kunjungan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_kode_kunjungan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cari_kunjungan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Periksa"));

        table_periksa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode", "Resep", "Diagnosa", "Pemeriksa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table_periksa);

        jLabel10.setText("Cari berdasarkan :");

        btn_cari_periksa.setText("Cari");
        btn_cari_periksa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cari_periksaActionPerformed(evt);
            }
        });

        combo_periksa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kode Pasien", "Resep", "Diagnosa", "Pemeriksa" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_periksa, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_kode_periksa, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cari_periksa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(combo_periksa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_kode_periksa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cari_periksa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Informasi"));

        jLabel7.setText("Jenis Kelamin");

        buttonGroup1.add(rb_laki);
        rb_laki.setText("Laki-Laki");

        combo_fakultas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-pilih fakultas-", "Kedokteran", "Kedokteran Gigi", "MIPA", "Teknik", "Hukum", "Ekonomi", "Sastra", "Psikologi", "ISIP", "Kesehatan Masyarakat", "Ilmu Komputer", "Ilmu Keperawatan", "Farmasi", "Pascasarjana", "Vokasi", "Umum" }));

        jLabel3.setText("Identitas");

        jLabel1.setText("Kode");

        jLabel2.setText("Nama");

        jLabel8.setText("No Telepon");

        jLabel4.setText("Fakultas");

        jLabel6.setText("Alamat");

        buttonGroup1.add(rb_perempuan);
        rb_perempuan.setText("Perempuan");

        jLabel5.setText("Tanggal Lahir");

        txt_kode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_kodeKeyReleased(evt);
            }
        });

        txta_alamat.setColumns(20);
        txta_alamat.setRows(5);
        jScrollPane4.setViewportView(txta_alamat);

        btn_cari.setText("Cari");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_hapus.setText("Hapus");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_keluar.setText("Keluar");
        btn_keluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_keluarMouseClicked(evt);
            }
        });
        btn_keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_keluarActionPerformed(evt);
            }
        });

        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_laporan.setText("Form Laporan");
        btn_laporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_laporanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(rb_laki)
                        .addGap(18, 18, 18)
                        .addComponent(rb_perempuan))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txt_kode, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_cari))
                            .addComponent(txt_nama)
                            .addComponent(txt_nim)
                            .addComponent(combo_fakultas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_telepon)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(date_tanggal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_laporan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_keluar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_hapus)
                        .addGap(4, 4, 4)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cari))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(rb_perempuan)
                    .addComponent(rb_laki))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_nim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(date_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combo_fakultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_telepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_edit)
                    .addComponent(btn_hapus)
                    .addComponent(btn_reset))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_keluar)
                    .addComponent(btn_laporan)
                    .addComponent(jButton1))
                .addGap(62, 62, 62))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Obat"));

        table_obat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Obat", "Satuan", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_obat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_obatMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(table_obat);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Informasi Obat"));

        jLabel12.setText("ID Obat");

        jLabel13.setText("Nama Obat");

        jLabel14.setText("Satuan");

        jLabel15.setText("Stock");

        jButton2.setText("Ubah");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Simpan");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Hapus");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Reset");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_stockobat)
                            .addComponent(txt_satuanobat)
                            .addComponent(txt_namaobat)
                            .addComponent(txt_idobat, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))))
                .addContainerGap(22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_idobat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt_namaobat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txt_satuanobat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_stockobat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(508, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    new TampilanUtama().show();
    this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed

private void btn_keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_keluarActionPerformed
// TODO add your handling code here:
    Object[] options = {"Ya", "Tidak"};
    if (JOptionPane.showOptionDialog(null, "Anda yakin ingin keluar?", "Konfirmasi",
            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0])
            == 0) {
        System.exit(0);
    }
}//GEN-LAST:event_btn_keluarActionPerformed

private void btn_keluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_keluarMouseClicked
// TODO add your handling code here:
    dispose();
}//GEN-LAST:event_btn_keluarMouseClicked

private void btn_cari_kunjunganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cari_kunjunganActionPerformed
// TODO add your handling code here:
    String kode = txt_kode_kunjungan.getText();
    
    if (kode.equals("") || kode.length() < 1) {
        JOptionPane.showMessageDialog(null, "Silahkan isi kata kunci yang akan dicari!", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        txt_kode_kunjungan.requestFocus();
    } else {
        cari_kunjungan();
    }
    
    
}//GEN-LAST:event_btn_cari_kunjunganActionPerformed

private void btn_cari_periksaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cari_periksaActionPerformed
// TODO add your handling code here:
    String kode = txt_kode_periksa.getText();
    
    if (kode.equals("") || kode.length() < 1) {
        JOptionPane.showMessageDialog(null, "Silahkan isi kata kunci yang akan dicari!", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        txt_kode_periksa.requestFocus();
    } else {
        cari_periksa();
    }
}//GEN-LAST:event_btn_cari_periksaActionPerformed

private void cari_pasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_pasienActionPerformed
// TODO add your handling code here:
    String kode = txt_kode_pasien.getText();
    
    if (kode.equals("") || kode.length() < 1) {
        JOptionPane.showMessageDialog(null, "Silahkan isi kata kunci yang akan dicari!", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        txt_kode_pasien.requestFocus();
    } else {
        cari_pasien();
    }
}//GEN-LAST:event_cari_pasienActionPerformed

private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
// TODO add your handling code here:
    String kode = txt_kode.getText();
    
    if (kode.equals("") || kode.length() < 1 ) {
        JOptionPane.showMessageDialog(null, "Kode Pasien harus diisi!", "Warning",
                JOptionPane.INFORMATION_MESSAGE);
        txt_kode.requestFocus();
    } else if (kode.length() > 5){
            JOptionPane.showMessageDialog(null,"Kode hanya terdiri dari 5 karakter!", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
            txt_kode.requestFocus();
        } else {
        cari();
    }
}//GEN-LAST:event_btn_cariActionPerformed

private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
// TODO add your handling code here:
    reset();
}//GEN-LAST:event_btn_resetActionPerformed

private void txt_kodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kodeKeyReleased
// TODO add your handling code here:
    btn_reset.setEnabled(true);
    btn_edit.setEnabled(true);
    btn_hapus.setEnabled(true);
}//GEN-LAST:event_txt_kodeKeyReleased

private void table_pasienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_pasienMouseClicked
// TODO add your handling code here:
    int rows = table_pasien.getSelectedRow();
    String kode = (String) table_pasien.getValueAt(rows, 0);
    
    txt_kode.setText(kode);
    
    btn_reset.setEnabled(true);
    btn_edit.setEnabled(true);
    btn_hapus.setEnabled(true);
}//GEN-LAST:event_table_pasienMouseClicked

private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
// TODO add your handling code here:
    String kode = txt_kode.getText();
    
    if (kode.equals("") || kode.length() < 1) {
        JOptionPane.showMessageDialog(null, "Masukkan Kode Pasien terleih dahulu!", "Warning",
                JOptionPane.INFORMATION_MESSAGE);
        txt_kode.requestFocus();
    } else if (kode.length() > 5 || kode.length() < 5){
            JOptionPane.showMessageDialog(null,"Kode terdiri dari 5 karakter!", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
            txt_kode.requestFocus();
        } else {
        edit();
    }
}//GEN-LAST:event_btn_editActionPerformed

private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
// TODO add your handling code here:
    String kode = txt_kode.getText();
    
    if (kode.equals("") || kode.length() < 1) {
        JOptionPane.showMessageDialog(null,"Masukkan Kode Pasien yang akan dihapus!", "Message",
                JOptionPane.INFORMATION_MESSAGE);
        txt_kode.requestFocus();
    } else if (kode.length() > 5){
            JOptionPane.showMessageDialog(null,"Kode hanya terdiri dari 5 karakter!", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
            txt_kode.requestFocus();
        } else {
        hapus();
    }
}//GEN-LAST:event_btn_hapusActionPerformed

private void btn_laporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_laporanActionPerformed
// TODO add your handling code here:
    new Laporan().show();
    this.dispose();
}//GEN-LAST:event_btn_laporanActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
    simpan_obat();
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    ubah_obat();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
    hapus_obat();
}//GEN-LAST:event_jButton4ActionPerformed

private void table_obatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_obatMouseClicked
// TODO add your handling code here:
    int rows = table_obat.getSelectedRow();
    String kode = (String) table_obat.getValueAt(rows, 0);
    String nama = (String) table_obat.getValueAt(rows, 1);
    String satuan = (String) table_obat.getValueAt(rows, 2);
    String stock = (String) table_obat.getValueAt(rows, 3);
    
    
    txt_idobat.setText(kode);
    txt_namaobat.setText(nama);
    txt_satuanobat.setText(satuan);
    txt_stockobat.setText(stock);
  
}//GEN-LAST:event_table_obatMouseClicked

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here:
    resetobat();
}//GEN-LAST:event_jButton5ActionPerformed

    public void hapus_obat(){
        Object[] options = {"Ya", "Batal"};
        if (JOptionPane.showOptionDialog(null, "Anda yakin ingin menghapus data ID Obat " + txt_kode.getText() + " ?","Warning",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,null, options, options[0])
                == 0) {
            try {
                String query = "delete from db_obat where id_obat = '" + txt_idobat.getText() + "'";
                koneksi objkoneksi = new koneksi();
                Connection con = (Connection) koneksi.bukakoneksi();
                Statement stmt = (Statement) con.createStatement(
                        ResultSet.TYPE_SCROLL_INSENSITIVE,
                        ResultSet.CONCUR_UPDATABLE);
                stmt.executeUpdate(query);
                JOptionPane.showMessageDialog(this, "Data dengan ID Obat " + txt_kode.getText() + " berhasil dihapus!", "Message",
                        JOptionPane.INFORMATION_MESSAGE);
                resetobat();
                bukaobat();
                
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } 
    }

    public void ubah_obat(){
        try {
            String query = "update db_obat set nama_obat = '" + txt_namaobat.getText() + "',"
                    + "satuan = '" + txt_satuanobat.getText() + "',"
                    + "stok = '" + txt_stockobat.getText() + "'"
                    + "where id_obat = '" + txt_idobat.getText() + "'";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stmt = (Statement) con.createStatement(
                    ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            stmt.executeUpdate(query);
            JOptionPane.showMessageDialog(this, "Data berhasil di Ubah!", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
            resetobat();
            bukaobat();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void simpan_obat(){
        try {
        String query = "select * from db_obat where id_obat = '" + txt_idobat.getText() + "'";
        koneksi objkoneksi = new koneksi();
        Connection con = (Connection) koneksi.bukakoneksi();
        Statement stmt = (Statement) con.createStatement(
                ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
        ResultSet rs = stmt.executeQuery(query);
        if (rs.next()) {
            JOptionPane.showMessageDialog(this, "Data dengan Id " + txt_idobat.getText() +" sudah ada!", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
            txt_kode.requestFocus();
        } else {
            masukkanobat();
        }
    } catch (SQLException e) {
    }
    }

    public void masukkanobat() {
        try {
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stmt = (Statement) con.createStatement(
                    ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            String query = "insert into db_obat values"
                    + "('" + txt_idobat.getText() + "','" + txt_namaobat.getText() + "','" + txt_satuanobat.getText() + "',"
                    + "'" + txt_stockobat.getText() + "')";
            int rows = stmt.executeUpdate(query);
            resetobat();
            JOptionPane.showMessageDialog(this, "Data telah tersimpan", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
            resetobat();
            bukaobat();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public void hapus(){
        Object[] options = {"Ya", "Batal"};
        if (JOptionPane.showOptionDialog(null, "Anda yakin ingin menghapus data dengan Kode Pasien " + txt_kode.getText() + " ?","Warning",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,null, options, options[0])
                == 0) {
            try {
                String query = "delete from pasien where kode = '" + txt_kode.getText() + "'";
                koneksi objkoneksi = new koneksi();
                Connection con = (Connection) koneksi.bukakoneksi();
                Statement stmt = (Statement) con.createStatement(
                        ResultSet.TYPE_SCROLL_INSENSITIVE,
                        ResultSet.CONCUR_UPDATABLE);
                stmt.executeUpdate(query);
                JOptionPane.showMessageDialog(this, "Data dengan Kode Pasien " + txt_kode.getText() + " berhasil dihapus!", "Message",
                        JOptionPane.INFORMATION_MESSAGE);
                reset();
                bukapasien();
                
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } 
    }

    public void edit(){
        try {
            String jk = null;
            if (rb_laki.isSelected()) {
                jk = rb_laki.getText();
            } else if (rb_perempuan.isSelected()){
                jk = rb_perempuan.getText();
            }
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String query = "update pasien set nama = '" + txt_nama.getText() + "',"
                    + "jenis_kelamin = '" + jk + "', nim = '" + txt_nim.getText() + "',"
                    + "tanggal_lahir = '" + df.format(date_tanggal.getDate()) + "',"
                    + "fakultas = '" + combo_fakultas.getSelectedItem().toString() + "',"
                    + "no_telepon = '" + txt_telepon.getText() + "',"
                    + "alamat = '" + txta_alamat.getText() + "'"
                    + "where kode = '" + txt_kode.getText() + "'";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stmt = (Statement) con.createStatement(
                    ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            stmt.executeUpdate(query);
            JOptionPane.showMessageDialog(this, "Data berhasil di Edit!", "Message",
                    JOptionPane.INFORMATION_MESSAGE);
            reset();
            bukapasien();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public void resetobat(){
        txt_idobat.setText("");
        txt_namaobat.setText("");
        txt_satuanobat.setText("");
        txt_stockobat.setText("");
    }
    
    public void reset(){
        txt_kode.setText("");
        txt_nama.setText("");
        buttonGroup1.clearSelection();
        txt_nim.setText("");
        date_tanggal.setDate(null);
        combo_fakultas.setSelectedItem("-pilih fakultas-");
        txt_telepon.setText("");
        txta_alamat.setText("");
        
        btn_reset.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_hapus.setEnabled(false);
    }

    public void cari(){
        try {
            String query = "select * from pasien where kode = '" + txt_kode.getText() + "'";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Statement stmt = (Statement) con.createStatement(
                    ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery(query);
            
            if (rs.next()){
                txt_kode.setText(rs.getString("kode"));
                txt_nama.setText(rs.getString("nama"));
                String jk = rs.getString("jenis_kelamin");
                if (jk.endsWith("Laki-Laki")){
                    rb_laki.setSelected(true);
                } else {
                    rb_perempuan.setSelected(true);
                }
                txt_nim.setText(rs.getString("nim"));
                date_tanggal.setDate(Date.valueOf(rs.getString("tanggal_lahir")));
                combo_fakultas.setSelectedItem(rs.getString("fakultas"));
                txt_telepon.setText(rs.getString("no_telepon"));
                txta_alamat.setText(rs.getString("alamat"));
            } else {
                JOptionPane.showMessageDialog(null, "Data dengan Kode " + txt_kode.getText() + " Tidak Ada!", "Warning",
                        JOptionPane.INFORMATION_MESSAGE);
                reset();
                txt_kode.requestFocus();
            }
        } catch (SQLException e) {
            
        }
    }
    
    public void cari_pasien(){
        DefaultTableModel MapTablePasien = new DefaultTableModel();
        MapTablePasien.addColumn("Kode");
        MapTablePasien.addColumn("Nama");
        MapTablePasien.addColumn("Identitas");  
        MapTablePasien.addColumn("Tanggal Lahir");  
        MapTablePasien.addColumn("Fakultas");
        
        try {
            String metode = (String) combo_pasien.getSelectedItem();
        String kata_kunci = null;
        
        if (metode == "Kode Pasien"){
            kata_kunci = "kode";
        } else if (metode == "Nama") {
            kata_kunci = "nama";
        } else if (metode == "Identitas") {
            kata_kunci = "nim";
        } else if (metode == "Tanggal Lahir") {
            kata_kunci = "tanggal_lahir";
        } else if (metode == "Fakultas") {
            kata_kunci = "fakultas";
        }
            
            
            String query = "select * from pasien where " + kata_kunci + " like '%" + txt_kode_pasien.getText() + "%'";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(query);
            while (rs.next()) {
                MapTablePasien.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(4), rs.getString(5), rs.getString(6)});
            }
            table_pasien.setModel(MapTablePasien);
        } catch (Exception e) {
            
        }
    }

    public void cari_periksa(){
        DefaultTableModel MapTablePeriksa = new DefaultTableModel();
        MapTablePeriksa.addColumn("Kode");
        MapTablePeriksa.addColumn("Resep");
        MapTablePeriksa.addColumn("Diagnosa");
        MapTablePeriksa.addColumn("Pemeriksa");
        
        try {
            String metode = (String) combo_periksa.getSelectedItem();
        String kata_kunci = null;
        
        if (metode == "Kode Pasien"){
            kata_kunci = "kode";
        } else if (metode == "Resep") {
            kata_kunci = "resep";
        } else if (metode == "Diagnosa") {
            kata_kunci = "diagnosa";
        } else if (metode == "Pemeriksa") {
            kata_kunci = "pemeriksa";
        }
            
            
            String query = "select * from periksa where " + kata_kunci + " like '%" + txt_kode_periksa.getText() + "%'";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(query);
            while (rs.next()) {
                MapTablePeriksa.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5)});
                
            }
            table_periksa.setModel(MapTablePeriksa);
        } catch (Exception e) {
            
        }
    }
    
    public void select_periksa(){
        DefaultTableModel MapTablePeriksa = new DefaultTableModel();
        MapTablePeriksa.addColumn("Kode");
        MapTablePeriksa.addColumn("Resep");
        MapTablePeriksa.addColumn("Diagnosa");
        MapTablePeriksa.addColumn("Pemeriksa");
        
        try {           
            
            String query = "select * from periksa where kode = '" + txt_kode.getText() + "'";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(query);
            while (rs.next()) {
                MapTablePeriksa.addRow(new Object[]{rs.getString(1), rs.getString(3), rs.getString(4), rs.getString(5)});
                
            }
            table_periksa.setModel(MapTablePeriksa);
        } catch (Exception e) {
            
        }
    }

    public void cari_kunjungan(){
        DefaultTableModel MapTableKunjungan = new DefaultTableModel();
        MapTableKunjungan.addColumn("Kode");
        MapTableKunjungan.addColumn("Tanggal");
        MapTableKunjungan.addColumn("Petugas");
        
        try {
            String metode = (String) combo_kunjungan.getSelectedItem();
        String kata_kunci = null;
        
        if (metode == "Kode Pasien"){
            kata_kunci = "kode";
        } else if (metode == "Tanggal Kunjungan") {
            kata_kunci = "tanggal_kunjungan";
        } else if (metode == "Petugas") {
            kata_kunci = "petugas";
        }
            
            
            String query = "select * from kunjungan where " + kata_kunci + " like '%" + txt_kode_kunjungan.getText() + "%'";
            koneksi objkoneksi = new koneksi();
            Connection con = (Connection) koneksi.bukakoneksi();
            Statement stat = (Statement) con.createStatement();
            ResultSet rs = stat.executeQuery(query);
            while (rs.next()) {
                MapTableKunjungan.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3)});
                
            }
            table_kunjungan.setModel(MapTableKunjungan);
        } catch (Exception e) {
            
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Admin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cari;
    private javax.swing.JButton btn_cari_kunjungan;
    private javax.swing.JButton btn_cari_periksa;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_keluar;
    private javax.swing.JButton btn_laporan;
    private javax.swing.JButton btn_reset;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cari_pasien;
    private javax.swing.JComboBox combo_fakultas;
    private javax.swing.JComboBox combo_kunjungan;
    private javax.swing.JComboBox combo_pasien;
    private javax.swing.JComboBox combo_periksa;
    private com.toedter.calendar.JDateChooser date_tanggal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JRadioButton rb_laki;
    private javax.swing.JRadioButton rb_perempuan;
    private javax.swing.JTable table_kunjungan;
    private javax.swing.JTable table_obat;
    private javax.swing.JTable table_pasien;
    private javax.swing.JTable table_periksa;
    private javax.swing.JTextField txt_idobat;
    private javax.swing.JTextField txt_kode;
    private javax.swing.JTextField txt_kode_kunjungan;
    private javax.swing.JTextField txt_kode_pasien;
    private javax.swing.JTextField txt_kode_periksa;
    private javax.swing.JTextField txt_nama;
    private javax.swing.JTextField txt_namaobat;
    private javax.swing.JTextField txt_nim;
    private javax.swing.JTextField txt_satuanobat;
    private javax.swing.JTextField txt_stockobat;
    private javax.swing.JTextField txt_telepon;
    private javax.swing.JTextArea txta_alamat;
    // End of variables declaration//GEN-END:variables
}
